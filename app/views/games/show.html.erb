<!-- Application Header -->
<div id="header">
	<div class="logo">
		BLACKJACK		
	</div>
</div>

<!-- Main Section -->
<div id="main">
	<div id="deck">
		<span id="deck-count"></span>
		<span>X</span>
	</div>
	<div id="dealer">
		<div id="dealer-cards"></div>
		<div id="dealer-count"></div>
	</div>
	<div id="player">
		<div id="player-cards"></div>
		<div id="player-count"></div>
	</div>
	<div id="deal">
		<button id="deal-button">Deal</button>
	</div>
	<div id="hit">
		<button id="hit-button">Hit</button>
	</div>
	<div id="stand">
		<button id="stand-button">Stand</button>
	</div>
	<div id="statistics">
		<h3>Game Statistics</h3>
		<table>
			<tr>
				<td><b>Wins:</b></td>
				<td id="wins"></td>
			</tr>
			<tr>
				<td><b>Losses:</b></td>
				<td id="losses"></td>
			</tr>
			<tr>
				<td><b>Pushes:</b></td>
				<td id="pushes"></td>
			</tr>
			<tr>
				<td><b>Win Rate:</b></td>
				<td id="win-rate"></td>
			</tr>

		</table>
	</div>
</div>

<script type="text/javascript">
	$(function() {

	// Card definition

		class Card {
			constructor(rank, suit) {
				this.rank = rank;
				this.suit = suit;
				this.heldBy = "deck";
				this.faceUp = true;
			}
		}

	// Utility functions

		function shuffle(array) {
		  var currentIndex = array.length, temporaryValue, randomIndex;

		  // While there remain elements to shuffle...
		  while (0 !== currentIndex) {

		    // Pick a remaining element...
		    randomIndex = Math.floor(Math.random() * currentIndex);
		    currentIndex -= 1;

		    // And swap it with the current element.
		    temporaryValue = array[currentIndex];
		    array[currentIndex] = array[randomIndex];
		    array[randomIndex] = temporaryValue;
		  }
		  
		  return array;
		}

	// Card functions

		function dealCards() {

			if (deck.length < 52) {
				console.log("Shuffling Deck");
				deck = [];
				deck = createDeck();
				var miscElement = $(`
					<div id="misc-banner">
						<h1 id="misc-message">Shuffling Deck</h1>
					</div>
				`);
				miscElement.appendTo('#dealer');			
				setTimeout(function() {
					miscElement.remove();
				}, 1000)
			}

			playerDrawCard();
			dealerDrawCard('faceDown');
			playerDrawCard();
			dealerDrawCard();

			// Adjust button display
			$('#win-banner').remove();
			$('#lose-banner').remove();
			$('#push-banner').remove();
			$('#deal-button').toggle();
			$('#hit-button').toggle();
			$('#stand-button').toggle();
		}

		function playerDrawCard() {
			card = deck.pop();
			playerCards.push(card);
			displayPlayerHand();
			displayDeckCount();
		}

		function dealerDrawCard(state = "faceUp") {
			var card = deck.pop();
			if (state == "faceDown") {
				card.faceUp = false;
			} else {
				card.faceUp = true;
			}
			dealerCards.push(card);
			displayDealerHand();
			displayDeckCount();
		}

		function createDeck() {
			var deck = [];
			var suits = ["hearts", "diamonds", "spades", "clubs"];
			var ranks = ["ace", "2", "3", "4", "5", "6", "7", "8", "9", "10", "jack", "queen", "king"];
			for (var i = 2; i > 0; i--) {
				$.each(suits, function(index, suit) {
					$.each(ranks, function(index, rank) {
						var card = new Card(rank, suit);
						deck.push(card);
					});
				});
			}
			deck = shuffle(deck);	
			return(deck);
		}

		function countHand(hand) {

			var count = 0;
			var aceCount = 0;
			var countIndex = {
				"2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, "10": 10,
				"jack": 10, "queen": 10, "king": 10, "ace": 11
			};

			$.each(hand, function(index, card) {
				if (card.faceUp) {
					count += countIndex[card.rank];
					if (card.rank == "ace") {
						aceCount += 1;
					}
				}
			});

			// Special condition for aces
			while (count > 21 && aceCount > 0) {
				count -= 10;
				aceCount -= 1;
			}

			return(count);

		}

	// Display functions

		function displayDealerHand() {
			$('#dealer-cards').empty();
			$.each(dealerCards, function(index, card) {
				if (card.faceUp) {
					var cardElement = $(
						`<img class='card' 
									src="/assets/cards/${card.rank}_of_${card.suit}.png" 
									style='left:${(50*index)+marginLeft}px'>`
					);
				} else {
					var cardElement = $(
						`<img class='card' 
									src="/assets/card_back.png" 
									style='left:${(50*index)+marginLeft}px'>`
					);
				}
				cardElement.appendTo('#dealer-cards');	
			});
			displayDealerHandCount();
		}

		function displayPlayerHand() {
			$('#player-cards').empty();
			$.each(playerCards, function(index, card) {
				var cardElement = $(
					`<img class='card' 
								src="/assets/cards/${card.rank}_of_${card.suit}.png" 
								style='left:${(50*index)+marginLeft}px'>`
				);
				cardElement.appendTo('#player-cards');
			});
			displayPlayerHandCount();
		}

		function displayDeckCount() {
			$('#deck-count').text(deck.length);
		}

		function displayPlayerHandCount() {
			var count = countHand(playerCards);
			$('#player-count').text(count);
		}

		function displayDealerHandCount() {
			var count = countHand(dealerCards);
			$('#dealer-count').text(count);
		}

		function loseRound() {
			losses += 1;
			newRound();
			var loseElement = $(`
				<div id="lose-banner">
					<h1 id="lose-message">Dealer Wins</h1>
				</div>
			`);
			loseElement.appendTo('#dealer');

		}

		function winRound() {
			wins += 1;
			newRound();
			var winElement = $(`
				<div id="win-banner">
					<h1 id="win-message">You Win!</h1>
				</div>
			`);
			winElement.appendTo('#player');
		}


		function push() {
			pushes += 1;
			newRound();
			var pushElement = $(`
				<div id="push-banner">
					<h1 id="push-message">Push</h1>
				</div>
			`);
			pushElement.appendTo('#dealer');

		}

		function newRound() {
			console.log('------- Next Round -------')
			dealerCards = [];
			playerCards = [];
			$('#hit-button').toggle();
			$('#stand-button').toggle();
			$('#deal-button').toggle();

			var gamesPlayed = wins + losses + pushes;
			if (gamesPlayed == 0) {
				winRate = 0;
			} else {
				winRate = (wins / (wins + losses)).toFixed(2);
			}
			$('#wins').text(wins);
			$('#losses').text(losses);
			$('#pushes').text(pushes);
			$('#win-rate').text(`${winRate * 100}%`);
		}

		function revealHoleCard() {
			dealerCards[0].faceUp = true;
			displayDealerHand();
		}

		function stand() {
			if (countHand(playerCards) >= countHand(dealerCards)) {
				revealHoleCard();
				while (countHand(dealerCards) < countHand(playerCards)) {
					dealerDrawCard();
					console.log('Dealer: ' + countHand(dealerCards) + '; Player: ' + countHand(playerCards));
					if (countHand(dealerCards) > 21) {
						winRound();
						return;
					} 
				}
				if (countHand(dealerCards) == countHand(playerCards)) {
					push();
					return;
				}
				loseRound();
				return;
			} else {
				console.log("Cannot stand if player has lower count than dealer.");
			}
		}

		function endGame() {
			console.log("game over");
		}

	// Main

		var marginLeft = 100;
		var dealerCards = [];
		var playerCards = [];

		var wins = 0;
		var losses = 0;
		var pushes = 0;
		var gamesPlayed = wins + losses + pushes;
		if (gamesPlayed == 0) {
			winRate = 0;
		} else {
			winRate = (wins / (wins + losses)).toFixed(2);
		}

		$('#wins').text(wins);
		$('#losses').text(losses);
		$('#pushes').text(pushes);
		$('#win-rate').text(`${winRate * 100}%`);

		$('#hit-button').toggle();
		$('#stand-button').toggle();

		var deck = createDeck();

		// Deal button
		$('#deal-button').click(function() {
			dealCards();
		});

		// Hit button
		$('#hit-button').click(function() {
			playerDrawCard();
			if (countHand(playerCards) > 21) {
				console.log("bust");
				loseRound();
			}
		});

		$('#stand-button').click(function() {
			stand();
		});
	});
</script>


