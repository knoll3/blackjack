<!-- Application Header -->
<div id="header">
	<div class="logo">
		BLACKJACK		
	</div>
</div>

<!-- Main Section -->
<div id="main">
	<div id="deck">
		<span id="deck-count"></span>
		<span>X</span>
	</div>
	<div id="dealer">
	</div>
	<div id="player">
	</div>
	<div id="deal">
		<button id="deal-button">Deal</button>
	</div>
	<div id="hit">
		<button id="hit-button">Hit</button>
	</div>
	<div id="stand">
		<!-- <button id="stand-button">Stand</button> -->
	</div>
	<div id="statistics"></div>
</div>

<script type="text/javascript">
	$(function() {

	// Card definition

		class Card {
			constructor(rank, suit) {
				this.rank = rank;
				this.suit = suit;
				this.heldBy = "deck";
				this.faceUp = true;
			}
		}

	// Utility functions

		function shuffle(array) {
		  var currentIndex = array.length, temporaryValue, randomIndex;

		  // While there remain elements to shuffle...
		  while (0 !== currentIndex) {

		    // Pick a remaining element...
		    randomIndex = Math.floor(Math.random() * currentIndex);
		    currentIndex -= 1;

		    // And swap it with the current element.
		    temporaryValue = array[currentIndex];
		    array[currentIndex] = array[randomIndex];
		    array[randomIndex] = temporaryValue;
		  }
		  
		  return array;
		}

	// Card functions

		function dealCards() {
			dealerDrawCard('faceDown');
			dealerDrawCard();
			playerDrawCard();
			playerDrawCard();
			$('#deal-button').toggle();
			$('#hit-button').toggle();
		}

		function playerDrawCard() {
			card = deck.pop();
			playerCards.push(card);
			displayPlayerHand();
		}

		function dealerDrawCard(state = "faceUp") {
			var card = deck.pop();
			if (state == "faceDown") {
				card.faceUp = false;
			} else {
				card.faceUp = true;
			}
			dealerCards.push(card);
			displayDealerHand();
		}

		function createDeck() {
			var deck = [];
			var suits = ["hearts", "diamonds", "spades", "clubs"];
			var ranks = ["ace", "2", "3", "4", "5", "6", "7", "8", "9", "10", "jack", "queen", "king"];
			for (var i = 2; i > 0; i--) {
				$.each(suits, function(index, suit) {
					$.each(ranks, function(index, rank) {
						var card = new Card(rank, suit);
						deck.push(card);
					});
				});
			}
			deck = shuffle(deck);	
			return(deck);
		}

	// Display functions

		function displayDealerHand() {
			$('#dealer').empty();
			$.each(dealerCards, function(index, card) {
				if (card.faceUp) {
					var cardElement = $(
						`<img class='card' 
									src="/assets/cards/${card.rank}_of_${card.suit}.png" 
									style='left:${(50*index)+marginLeft}px'>`
					);
				} else {
					var cardElement = $(
						`<img class='card' 
									src="/assets/card_back.png" 
									style='left:${(50*index)+marginLeft}px'>`
					);
				}
				cardElement.appendTo('#dealer');	
			});
		}

		function displayPlayerHand() {
			$('#player').empty();
			$.each(playerCards, function(index, card) {
				var cardElement = $(
					`<img class='card' 
								src="/assets/cards/${card.rank}_of_${card.suit}.png" 
								style='left:${(50*index)+marginLeft}px'>`
				);
				cardElement.appendTo('#player');
			});
		}

		function displayDeckCount() {
			$('#deck-count').text(deck.length);
		}



	// Main

		var marginLeft = 100;
		var dealerCards = [];
		var playerCards = [];

		$('#hit-button').toggle();

		var deck = createDeck();
		console.log(deck);

		// Deal button
		$('#deal-button').click(function() {
			dealCards();
		});

		// Hit button
		$('#hit-button').click(function() {
			playerDrawCard();
		});

	});
</script>


